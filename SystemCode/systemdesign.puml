@startuml "System Design for My App"

skinparam ComponentStyle rectangle


frame frontend{
    file image
    [output]
    image -[hidden]- [output]
}


frame backend {
    collections "Sample Images"
    note as R
    Red arrow indecates the 
    preprocessing for sample images
    end note

    package Preprocessing {
        [Image Processing]
    }


    package "Feature Extraction"{
        [Feature Extractor and Classifier]
        [Feature Vector and Image Class]
        [Feature Dictionary]
    }

    package "Matching"{
        [Matching Processor]
    }
    note as MP
    Find the matching image by computing the 
    nearest neighbour in the feature dictionary
    based on the image class
    end note
}

image->[Image Processing] #Green
[Sample Images]-->[Image Processing] #Red
[Image Processing] -> [Feature Extractor and Classifier] #Green
[Image Processing] -> [Feature Extractor and Classifier] #Red
[Feature Extractor and Classifier]-->[Feature Vector and Image Class] #Green
[Feature Extractor and Classifier]-->[Feature Vector and Image Class] #Red
[Feature Vector and Image Class]-->[Feature Dictionary] #Red

[Matching Processor]<-[Feature Vector and Image Class] #Green
[Matching Processor]<-[Feature Dictionary] #Red

[output]<-[Matching Processor] #Green

note as G
Green arrow indecates the 
run time flow for input image
end note

note as CNN
Backbone CNN from VGG
Classifier trained using transfer learning
end note

note as FM
Feature map of the image extracted
by the backbone CNN
end note

note as FD
Feature dictionary of the sample images
based on the class of the image
end note



G -- image
[Sample Images] - R

CNN - [Feature Extractor and Classifier]

FM - [Feature Vector and Image Class]

FD - [Feature Dictionary]

[Matching Processor] -- MP

@enduml